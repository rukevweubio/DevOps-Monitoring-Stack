version: '3.8'

services:
  # Reverse Proxy
  nginx:
    image: nginx:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - target: 80
        published: 8080
        mode: host
    volumes:
      - ./nginx-config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./html:/usr/share/nginx/html
      - nginx-logs:/var/log/nginx
    networks:
      - monitoring

  # Database
  postgres:
    image: postgres:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: mydb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 5
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    environment:
      DATA_SOURCE_NAME: "postgresql://root:root@postgres:5432/mydb?sslmode=disable"
    deploy:
      replicas: 1
    depends_on:
      - postgres

  # Monitoring & Observability
  grafana:
    image: grafana/grafana:latest
    deploy:
      replicas: 1
    ports:
      - target: 3000
        published: 3000
        mode: host
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-provisioning:/etc/grafana/provisioning
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    deploy:
      replicas: 1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - target: 9090
        published: 9090
        mode: host
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    deploy:
      replicas: 1
    ports:
      - target: 3100
        published: 3100
        mode: host
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    deploy:
      replicas: 1
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - nginx-logs:/var/log/nginx
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command:
      - -config.file=/etc/promtail/config.yml
      - -config.expand-env=true
    networks:
      - monitoring

  # Container Monitoring
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    deploy:
      replicas: 1
    ports:
      - target: 8080
        published: 8081
        mode: host
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring

# Network and Volume Definitions
networks:
  monitoring:
    driver: overlay

volumes:
  nginx-logs:
    driver: local
  postgres-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local